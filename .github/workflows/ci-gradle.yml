name: Java CI with Gradle

on: workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

    - name: Remove default github maven configuration
    # This step is a workaround to avoid a decryption issue of Beam's
    # net.linguica.gradle.maven.settings plugin and github's provided maven
    # settings.xml file
      run: rm ~/.m2/settings.xml

    - name: Build with Gradle Wrapper
      run: gradle build
      env:
          MAVEN_USERNAME: ${{ secrets.REPO_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.REPO_TOKEN }}

    - name: 'Build image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - run: |
            docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest -f Dockerfile-gradle .
            docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest ${{ secrets.STAP_ACR_LOGIN_SERVER }}/sampleapp:latest

    - name: 'Push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.STAP_ACR_LOGIN_SERVER }}
        username: ${{ secrets.STAP_ACR_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: |
            docker push ${{ secrets.STAP_ACR_LOGIN_SERVER }}/sampleapp:latest
